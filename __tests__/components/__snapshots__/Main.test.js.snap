// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main Component should render component without props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div
        className="pad-2"
      >
        <styled.div
          className="row"
        >
          <styled.div
            className="pad-3"
          >
            <styled.h3>
              About
            </styled.h3>
            <About />
            <styled.h3>
              Risks and challenges
            </styled.h3>
          </styled.div>
          <styled.div
            className="pad-4"
          >
            <styled.h3>
              Support
            </styled.h3>
            <List />
          </styled.div>
        </styled.div>
      </styled.div>,
      "className": "pad-1",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div
          className="row"
        >
          <styled.div
            className="pad-3"
          >
            <styled.h3>
              About
            </styled.h3>
            <About />
            <styled.h3>
              Risks and challenges
            </styled.h3>
          </styled.div>
          <styled.div
            className="pad-4"
          >
            <styled.h3>
              Support
            </styled.h3>
            <List />
          </styled.div>
        </styled.div>,
        "className": "pad-2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div
              className="pad-3"
            >
              <styled.h3>
                About
              </styled.h3>
              <About />
              <styled.h3>
                Risks and challenges
              </styled.h3>
            </styled.div>,
            <styled.div
              className="pad-4"
            >
              <styled.h3>
                Support
              </styled.h3>
              <List />
            </styled.div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.h3>
                  About
                </styled.h3>,
                <About />,
                <styled.h3>
                  Risks and challenges
                </styled.h3>,
                undefined,
              ],
              "className": "pad-3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "About",
                },
                "ref": null,
                "rendered": "About",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Risks and challenges",
                },
                "ref": null,
                "rendered": "Risks and challenges",
                "type": [Function],
              },
              undefined,
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.h3>
                  Support
                </styled.h3>,
                <List />,
              ],
              "className": "pad-4",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Support",
                },
                "ref": null,
                "rendered": "Support",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div
          className="pad-2"
        >
          <styled.div
            className="row"
          >
            <styled.div
              className="pad-3"
            >
              <styled.h3>
                About
              </styled.h3>
              <About />
              <styled.h3>
                Risks and challenges
              </styled.h3>
            </styled.div>
            <styled.div
              className="pad-4"
            >
              <styled.h3>
                Support
              </styled.h3>
              <List />
            </styled.div>
          </styled.div>
        </styled.div>,
        "className": "pad-1",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div
            className="row"
          >
            <styled.div
              className="pad-3"
            >
              <styled.h3>
                About
              </styled.h3>
              <About />
              <styled.h3>
                Risks and challenges
              </styled.h3>
            </styled.div>
            <styled.div
              className="pad-4"
            >
              <styled.h3>
                Support
              </styled.h3>
              <List />
            </styled.div>
          </styled.div>,
          "className": "pad-2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                className="pad-3"
              >
                <styled.h3>
                  About
                </styled.h3>
                <About />
                <styled.h3>
                  Risks and challenges
                </styled.h3>
              </styled.div>,
              <styled.div
                className="pad-4"
              >
                <styled.h3>
                  Support
                </styled.h3>
                <List />
              </styled.div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h3>
                    About
                  </styled.h3>,
                  <About />,
                  <styled.h3>
                    Risks and challenges
                  </styled.h3>,
                  undefined,
                ],
                "className": "pad-3",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "About",
                  },
                  "ref": null,
                  "rendered": "About",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Risks and challenges",
                  },
                  "ref": null,
                  "rendered": "Risks and challenges",
                  "type": [Function],
                },
                undefined,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h3>
                    Support
                  </styled.h3>,
                  <List />,
                ],
                "className": "pad-4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Support",
                  },
                  "ref": null,
                  "rendered": "Support",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Main should render component without props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div
        className="pad-2"
      >
        <styled.div
          className="row"
        >
          <styled.div
            className="pad-3"
          >
            <styled.h3>
              About
            </styled.h3>
            <About />
            <styled.h3>
              Risks and challenges
            </styled.h3>
          </styled.div>
          <styled.div
            className="pad-4"
          >
            <styled.h3>
              Support
            </styled.h3>
            <List />
          </styled.div>
        </styled.div>
      </styled.div>,
      "className": "pad-1",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div
          className="row"
        >
          <styled.div
            className="pad-3"
          >
            <styled.h3>
              About
            </styled.h3>
            <About />
            <styled.h3>
              Risks and challenges
            </styled.h3>
          </styled.div>
          <styled.div
            className="pad-4"
          >
            <styled.h3>
              Support
            </styled.h3>
            <List />
          </styled.div>
        </styled.div>,
        "className": "pad-2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div
              className="pad-3"
            >
              <styled.h3>
                About
              </styled.h3>
              <About />
              <styled.h3>
                Risks and challenges
              </styled.h3>
            </styled.div>,
            <styled.div
              className="pad-4"
            >
              <styled.h3>
                Support
              </styled.h3>
              <List />
            </styled.div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.h3>
                  About
                </styled.h3>,
                <About />,
                <styled.h3>
                  Risks and challenges
                </styled.h3>,
                undefined,
              ],
              "className": "pad-3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "About",
                },
                "ref": null,
                "rendered": "About",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Risks and challenges",
                },
                "ref": null,
                "rendered": "Risks and challenges",
                "type": [Function],
              },
              undefined,
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.h3>
                  Support
                </styled.h3>,
                <List />,
              ],
              "className": "pad-4",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Support",
                },
                "ref": null,
                "rendered": "Support",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div
          className="pad-2"
        >
          <styled.div
            className="row"
          >
            <styled.div
              className="pad-3"
            >
              <styled.h3>
                About
              </styled.h3>
              <About />
              <styled.h3>
                Risks and challenges
              </styled.h3>
            </styled.div>
            <styled.div
              className="pad-4"
            >
              <styled.h3>
                Support
              </styled.h3>
              <List />
            </styled.div>
          </styled.div>
        </styled.div>,
        "className": "pad-1",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div
            className="row"
          >
            <styled.div
              className="pad-3"
            >
              <styled.h3>
                About
              </styled.h3>
              <About />
              <styled.h3>
                Risks and challenges
              </styled.h3>
            </styled.div>
            <styled.div
              className="pad-4"
            >
              <styled.h3>
                Support
              </styled.h3>
              <List />
            </styled.div>
          </styled.div>,
          "className": "pad-2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                className="pad-3"
              >
                <styled.h3>
                  About
                </styled.h3>
                <About />
                <styled.h3>
                  Risks and challenges
                </styled.h3>
              </styled.div>,
              <styled.div
                className="pad-4"
              >
                <styled.h3>
                  Support
                </styled.h3>
                <List />
              </styled.div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h3>
                    About
                  </styled.h3>,
                  <About />,
                  <styled.h3>
                    Risks and challenges
                  </styled.h3>,
                  undefined,
                ],
                "className": "pad-3",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "About",
                  },
                  "ref": null,
                  "rendered": "About",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Risks and challenges",
                  },
                  "ref": null,
                  "rendered": "Risks and challenges",
                  "type": [Function],
                },
                undefined,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h3>
                    Support
                  </styled.h3>,
                  <List />,
                ],
                "className": "pad-4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Support",
                  },
                  "ref": null,
                  "rendered": "Support",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
